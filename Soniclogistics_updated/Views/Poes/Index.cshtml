@model IEnumerable<Soniclogistics_updated.Models.Po>
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.OrderDateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Expected_date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Country)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserId)
            </th>
            <th>
                RFQ Products - Quantity
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RfqId)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderDateTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Expected_date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserId)
                </td>
              

               
                <td>
                        @{
                            var rfqId = item.RfqId;
                            var rfqProductsMap = ViewData["rfqProductsMap"] as Dictionary<int, string>;
                            if (rfqProductsMap != null && rfqProductsMap.ContainsKey(rfqId))
                            {
                                @Html.Raw(rfqProductsMap[rfqId])
                            }
                        }
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RfqId)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.OrderId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.OrderId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.OrderId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
